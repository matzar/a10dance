{"version":3,"file":"src_app_roster_roster_module_ts.js","mappings":"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","sources":["./src/app/roster/roster-routing.module.ts","./src/app/roster/roster.module.ts","./src/app/roster/roster.page.ts","./src/app/students.service.ts","./src/app/roster/roster.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RosterPage } from './roster.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RosterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RosterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RosterPageRoutingModule } from './roster-routing.module';\n\nimport { RosterPage } from './roster.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RosterPageRoutingModule\n  ],\n  declarations: [RosterPage]\n})\nexport class RosterPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { StudentsService, Student } from '../students.service';\nimport {\n  ActionSheetController,\n  AlertController,\n  ToastController,\n} from '@ionic/angular';\n\n@Component({\n  selector: 'app-roster',\n  templateUrl: './roster.page.html',\n  styleUrls: ['./roster.page.scss'],\n})\nexport class RosterPage implements OnInit {\n  students: Student[] = [];\n\n  // inject a reference to the StudentService into the\n  // page's constructor.\n  // Do it, by inserting a new private parameter\n  // `studentService`, of type `StudentService.\n  // Marking the parameter private or public\n  // automatically exposes the parameter as a member of the component class - it is a handy shortcut TypeScript provides.\n  constructor(\n    public actionSheetController: ActionSheetController,\n    public alertController: AlertController,\n    public toastController: ToastController,\n    private studentService: StudentsService\n  ) {}\n\n  // By default, the Roster Page implements Angular's `OnInit` interface,\n  // which requires you to implement the `OnInit` Angular hook.\n  ngOnInit() {\n    this.students = this.studentService.getAllStudents();\n  }\n\n  setStudentStatus(student) {\n    student.status = !student.status;\n  }\n\n  // DATABASE FUNCTIONS\n  async deleteStudent(student: Student) {\n    // this.students.splice(this.students.indexOf(students), 1);\n    this.students = this.students.filter((el) => el.id !== student.id);\n    this.presentToast(student);\n  }\n\n  async deleteStudents(toDelete: Student[]) {\n    toDelete.forEach(\n      (studentToDelete) =>\n        (this.students = this.students.filter(\n          (el) => el.id !== studentToDelete.id\n        ))\n    );\n    this.presentToastWithOptions(toDelete);\n  }\n\n  // ACTION SHEET\n  async presentActionSheet(student: Student): Promise<void> {\n    // The create function accepts an options object and returns a promise,\n    // which resolves to the action sheet component itself.\n    // This means you must await it, which means the presentActionSheet function has to be marked as async.\n    const actionSheet = await this.actionSheetController.create({\n      header: `${student.firstName} ${student.lastName}`,\n      cssClass: 'list-roster',\n      buttons: [\n        {\n          text: 'Delete',\n          role: 'destructive',\n          icon: 'trash',\n          id: 'delete-button',\n          data: {\n            type: 'delete',\n          },\n          handler: () => {\n            console.log('Delete clicked');\n            this.presentDeleteAlert(student);\n          },\n        },\n        {\n          text: 'Delete Many',\n          role: 'destructive',\n          icon: 'trash',\n          id: 'delete-many-button',\n          data: {\n            type: 'delete',\n          },\n          handler: () => {\n            console.log('Delete Many clicked');\n            this.presentDeleteManyAlert(student);\n          },\n        },\n        {\n          text: 'Delete Choose',\n          role: 'destructive',\n          icon: 'trash',\n          id: 'delete-choose-button',\n          data: {\n            type: 'delete',\n          },\n          handler: () => {\n            console.log('Delete Choose clicked');\n            this.presentDeleteChooseAlert(student);\n          },\n        },\n        {\n          text: student.status ? 'Absent' : 'Present',\n          icon: student.status ? 'eye-off' : 'eye',\n          id: 'mark-present',\n          handler: () => {\n            this.setStudentStatus(student);\n          },\n        },\n        {\n          text: 'Share',\n          icon: 'share',\n          data: 10,\n          handler: () => {\n            console.log('Share clicked');\n          },\n        },\n        {\n          text: 'Play (open modal)',\n          icon: 'caret-forward-circle',\n          data: 'Data value',\n          handler: () => {\n            console.log('Play clicked');\n          },\n        },\n        {\n          text: 'Favorite',\n          icon: 'heart',\n          handler: () => {\n            console.log('Favorite clicked');\n          },\n        },\n        {\n          text: 'Cancel',\n          icon: 'close',\n          role: 'cancel',\n          handler: () => {\n            console.log('Cancel clicked');\n          },\n        },\n      ],\n    });\n    // Once you have a reference to the action sheet component,\n    // you can display it by calling its present function.\n    // This function also returns a promise, so you may wish to await that call also.\n    await actionSheet.present();\n\n    const { role, data } = await actionSheet.onDidDismiss();\n    console.log('onDidDismiss resolved with role and data', role, data);\n  }\n\n  // ALERTS\n  async presentDeleteAlert(student: Student) {\n    const alert = await this.alertController.create({\n      header: 'Delete student?',\n      subHeader: `${student.firstName} ${student.lastName}`,\n      message: 'This operation cannot be undone.',\n      buttons: [\n        {\n          text: 'Delete',\n          role: 'destructive',\n          handler: () => {\n            this.deleteStudent(student);\n          },\n        },\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  async presentDeleteManyAlert(student: Student) {\n    const input = [];\n    const toDelete: Student[] = [];\n\n    this.students.forEach((el: Student) =>\n      input.push({\n        name: `${el.firstName} ${el.lastName}`,\n        type: 'checkbox',\n        label: `${el.firstName} ${el.lastName}`,\n        value: `${el.firstName} ${el.lastName}`,\n        handler: () => {\n          console.log(`${el.firstName} ${el.lastName} selected`);\n          toDelete.push(el);\n          console.log(toDelete);\n        },\n        checked: false,\n      })\n    );\n\n    console.log(input);\n\n    const alert = await this.alertController.create({\n      header: 'Delete student?',\n      subHeader: '',\n      message: 'This operation cannot be undone.',\n      inputs: input,\n      buttons: [\n        {\n          text: 'Delete many',\n          role: 'desctuctive',\n          handler: () => {\n            this.deleteStudents(toDelete);\n          },\n        },\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  async presentDeleteChooseAlert(student: Student) {\n    const input = [];\n    let toDelete: Student = student;\n\n    this.students.forEach((el: Student) =>\n      input.push({\n        name: `${el.firstName} ${el.lastName}`,\n        type: 'radio',\n        label: `${el.firstName} ${el.lastName}`,\n        value: `${el.firstName} ${el.lastName}`,\n        handler: () => {\n          toDelete = el;\n          console.log(\n            `${toDelete.firstName} ${toDelete.lastName} selected to delete`\n          );\n        },\n        checked: false,\n      })\n    );\n\n    console.log(input);\n\n    const alert = await this.alertController.create({\n      header: 'Delete student?',\n      subHeader: '',\n      message: 'This operation cannot be undone.',\n      inputs: input,\n      buttons: [\n        {\n          text: 'Delete',\n          role: 'desctuctive',\n          handler: () => {\n            this.deleteStudent(toDelete);\n          },\n        },\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  // TOASTS\n  async presentToast(student) {\n    const toast = await this.toastController.create({\n      message: `${student.firstName} ${student.lastName} deleted.`,\n      color: 'danger',\n      duration: 2000,\n      translucent: true,\n      animated: true,\n      icon: 'warning',\n      // If true, the keyboard will be automatically dismissed when the overlay is presented.\n      keyboardClose: true,\n    });\n    toast.present();\n  }\n\n  async presentToastWithOptions(toDelete: Student[]) {\n    const toast = await this.toastController.create({\n      header: 'Deleted students:',\n      message: toDelete\n        .map((el) => ` ${el.firstName} ${el.lastName}`)\n        .toString(),\n      icon: 'information-circle',\n      position: 'top',\n      color: 'warning',\n      // no duration attribute so the toast will have to dismissed by the user by clicking some of the buttons.\n      buttons: [\n        // {\n        //   side: 'start',\n        //   icon: 'share',\n        //   text: 'Share',\n        //   handler: () => {\n        //     console.log('Share clicked');\n        //   },\n        // },\n        {\n          text: 'Done',\n          role: 'cancel',\n          handler: () => {\n            console.log('Cancel clicked');\n          },\n        },\n      ],\n    });\n    await toast.present();\n\n    const { role } = await toast.onDidDismiss();\n    console.log('onDidDismiss resolved with role', role);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Create a Student object as an interface.\n * Remember, interfaces do not exist in JavaScript,\n * and will completely vanish upon build.\n * Their sole purpose for us is to:\n * - enable parameter type checking,\n * - code completion,\n * - and intellisense inside the code editor.\n */\n\n// The purpose of interface is typechecking and code completion\nexport interface Student {\n  id: string;\n  firstName: string;\n  lastName: string;\n  birthDate?: string;\n  parentName?: string;\n  parentEmail?: string;\n  parentPhone?: string;\n  photoUrl?: string;\n  /**\n   * This line indicates that the status field is an optional string value,\n   * which may only contain one of two values: present or absent.\n   * Though this will not be enforced at runtime,\n   * the TypeScript compiler will prevent you from assigning any other value.\n   */\n  status?: true | false;\n}\n\nconst mockStudents: Student[] = [\n  { id: '1', firstName: 'Greg', lastName: 'Marine', status: true },\n  { id: '2', firstName: 'Jonathan', lastName: 'Bennett', status: true },\n  { id: '3', firstName: 'Neil', lastName: 'Estandarte', status: true },\n  { id: '4', firstName: 'Jen', lastName: 'Townsend', status: false },\n  { id: '5', firstName: 'Casey', lastName: 'McBride', status: true },\n  { id: '6', firstName: 'Diane', lastName: 'Rivera', status: false },\n  { id: '7', firstName: 'Troy', lastName: 'Gutierrez', status: false },\n  { id: '8', firstName: 'Priscilla', lastName: 'Little', status: true },\n  { id: '9', firstName: 'Bobby', lastName: 'Robbins', status: true },\n  { id: '10', firstName: 'Edmund', lastName: 'Gardner', status: true },\n];\n\n@Injectable({\n  // When you provide the service to a root injector,\n  // that instance of the service is shared and available\n  // in every class that needs the service.\n  // This is ideal when a service is sharing methods or state.\n  providedIn: 'root',\n})\nexport class StudentsService {\n  constructor() {}\n\n  getAllStudents() {\n    // ... is a shorthand for making a shallow copy of an array.\n    return [...mockStudents];\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title><ion-icon icon=\\\"school\\\"></ion-icon> Class Roster</ion-title>\\n    <ion-header>\\n      <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n          <ion-back-button defaultHref=\\\"home\\\" text=\\\"home\\\" icon=\\\"airplane\\\">\\n          </ion-back-button>\\n        </ion-buttons>\\n      </ion-toolbar>\\n    </ion-header>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-item-sliding *ngFor=\\\"let student of students\\\">\\n      <ion-item>\\n        <ion-buttons slot=\\\"end\\\">\\n          <ion-button (click)=\\\"presentActionSheet(student)\\\">\\n            <ion-icon\\n              slot=\\\"icon-only\\\"\\n              ios=\\\"ellipsis-horizontal\\\"\\n              md=\\\"ellipsis-vertical\\\"\\n            ></ion-icon>\\n          </ion-button>\\n          <ion-button>\\n            <ion-icon\\n              slot=\\\"icon-only\\\"\\n              name=\\\"chevron-forward-outline\\\"\\n            ></ion-icon>\\n          </ion-button>\\n        </ion-buttons>\\n        <!-- ion-icon and ion-label are siblings here -->\\n        <ion-icon slot=\\\"start\\\" icon=\\\"person\\\"></ion-icon>\\n\\n        <ion-label (click)=\\\"presentActionSheet(student)\\\">\\n          {{student.firstName}} {{student.lastName}}\\n        </ion-label>\\n        <ion-icon\\n          *ngIf=\\\"student.status===true\\\"\\n          slot=\\\"end\\\"\\n          icon=\\\"eye\\\"\\n          (click)=\\\"setStudentStatus(student)\\\"\\n        ></ion-icon>\\n        <ion-icon\\n          *ngIf=\\\"student.status===false\\\"\\n          slot=\\\"end\\\"\\n          icon=\\\"eye-off\\\"\\n          (click)=\\\"setStudentStatus(student)\\\"\\n        ></ion-icon>\\n      </ion-item>\\n      <ion-item-options (ionSwipe)=\\\"deleteStudent(student)\\\" side=\\\"end\\\">\\n        <ion-item-option\\n          color=\\\"danger\\\"\\n          expandable=\\\"false\\\"\\n          (click)=\\\"deleteStudent(student)\\\"\\n          >Delete</ion-item-option\\n        >\\n      </ion-item-options>\\n      <ion-item-options side=\\\"start\\\" (ionSwipe)=\\\"setStudentStatus(student)\\\">\\n        <ion-item-option color=\\\"success\\\" expandable=\\\"true\\\">\\n          <!-- <ion-icon icon=\\\"star\\\" (click)=\\\"setStudentStatus(student)\\\"></ion-icon> -->\\n        </ion-item-option>\\n      </ion-item-options>\\n    </ion-item-sliding>\\n  </ion-list>\\n</ion-content>\\n\";"],"names":[],"sourceRoot":"webpack:///"}